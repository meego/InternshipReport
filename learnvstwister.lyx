#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrartcl
\begin_preamble
\usepackage{graphicx}
\usepackage{listings}
\usepackage{color}
\usepackage{xcolor}
\usepackage{caption}
\usepackage{url}

  \usepackage{courier}
  \lstset{
  	basicstyle=\scriptsize\ttfamily, % Standardschrift
  	%numbers=left,               % Ort der Zeilennummern
  	numberstyle=\tiny,          % Stil der Zeilennummern
  	%stepnumber=2,               % Abstand zwischen den Zeilennummern
  	numbersep=5pt,              % Abstand der Nummern zum Text
  	tabsize=2,                  % Groesse von Tabs
  	extendedchars=true,         %
  	breaklines=true,            % Zeilen werden Umgebrochen
  	keywordstyle=\color{red},
  	frame=b,         
  	%        keywordstyle=[1]\textbf,    % Stil der Keywords
  	%        keywordstyle=[2]\textbf,    %
  	%        keywordstyle=[3]\textbf,    %
  	%        keywordstyle=[4]\textbf,   \sqrt{\sqrt{}} %
  	stringstyle=\color{blue}\ttfamily, % Farbe der String
  	showspaces=false,           % Leerzeichen anzeigen ?
  	showtabs=false,             % Tabs anzeigen ?
  	xleftmargin=17pt,
  	framexleftmargin=17pt,
  	framexrightmargin=5pt,
  	framexbottommargin=4pt,
  	%backgroundcolor=\color{lightgray},
  	showstringspaces=false      % Leerzeichen in Strings anzeigen ?        
  }
  \lstloadlanguages{% Check Dokumentation for further languages ...
  	%[Visual]Basic
  	%Pascal
  	%C
  	%C++
  	%XML
  	%HTML
  	Python
  }
  %\DeclareCaptionFont{blue}{\color{blue}} 
  
  %\captionsetup[lstlisting]{singlelinecheck=false, labelfont={blue}, textfont={blue}}
  \usepackage{caption}
  
\DeclareCaptionFont{white}{\color{white}}
\DeclareCaptionFormat{listing}{\colorbox{gray}{\parbox{\textwidth}{#1#2#3}}}
\captionsetup[lstlisting]{format=listing,labelfont=white,textfont=white}

\hypersetup{
colorlinks=true,
filecolor =magenta,
urlcolor=magenta,
linkcolor=black,
citecolor=black,
runcolor=magenta	
}
\end_preamble
\use_default_options true
\begin_modules
eqs-within-sections
figs-within-sections
tabs-within-sections
\end_modules
\maintain_unincluded_children false
\language british
\language_package babel
\inputencoding latin9
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Scikit-Learn vs.
 Twister
\end_layout

\begin_layout Standard
Both scikit-learn and the twister svm are based on the libsvm libary.
 Twister is a map/reduce runtime that enables iterative map/reduce models.
 The svm version for twister is based on the cascade svm approach.
 The training data is splitted into several sets and a svm is built for
 every subset.
 The support vectors of the models are used to create a new svm model.
 If there is only one model left, the first iteration is finished.
 The support vectors of the last model are added to the subsets and the
 iteration step is repeated.
 This is done until the change of the final support vectors is less than
 a given threshold.
 
\end_layout

\begin_layout Standard
To test the runtime of the two implementations, classifiers were built for
 training data of different size.
 Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "svm_table"

\end_inset

 shows the results for 
\begin_inset Formula $20.000$
\end_inset

, 
\begin_inset Formula $40.000$
\end_inset

 and 
\begin_inset Formula $100.000$
\end_inset

 instances.
 It can be seen that scikit-learn is faster.
 This is due to the overhead caused by the message passing and setting up
 the different jobs.
 With an increasing training set the twister svm implementation promises
 to become faster than the serial one.
 Unfortunately, it was not possible to run more tests with larger training
 sets, because the twister implementations is still quite unstable.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{figure}[h]
\end_layout

\begin_layout Plain Layout


\backslash
begin{tabular}{|l|r|r|r|}
\end_layout

\begin_layout Plain Layout


\backslash
hline 	
\end_layout

\begin_layout Plain Layout

Classifier 	& Accuracy & training time in s & test time in s 
\backslash

\backslash
  	
\end_layout

\begin_layout Plain Layout


\backslash
hline 	
\end_layout

\begin_layout Plain Layout


\backslash
hline 	
\end_layout

\begin_layout Plain Layout

SVC (sklearn), rbf, 20k instances 	& 0.8752580408 	& 39.545465 	& 109.808209
 	
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hline 	
\end_layout

\begin_layout Plain Layout


\backslash
parbox[t]{6cm}{SVC (sklearn), rbf,
\backslash

\backslash
 gamma=0.1, C=1, 20k instances} 	& 0.9579808675 	& 45.242423 	& 66.846724 
\backslash

\backslash
  	
\end_layout

\begin_layout Plain Layout


\backslash
hline 	
\end_layout

\begin_layout Plain Layout

libSVM twister, 20k instances 	& 0.9592930497 	& 445.867 	& - 
\backslash

\backslash
  	
\end_layout

\begin_layout Plain Layout


\backslash
hline 	
\end_layout

\begin_layout Plain Layout

libSVM twister, 40k instances 	& 0.963317509 	& 934.912 	& - 
\backslash

\backslash
  	
\end_layout

\begin_layout Plain Layout


\backslash
hline 	
\end_layout

\begin_layout Plain Layout

libSVM twister, 100k instances 	& 0.9665214475 	& 3077.239 	& -
\backslash

\backslash
 	
\end_layout

\begin_layout Plain Layout


\backslash
hline 
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}  
\end_layout

\begin_layout Plain Layout


\backslash
caption{SVMs from scikit-learn and Twister with rgb as features } 
\end_layout

\begin_layout Plain Layout


\backslash
label{svm_table} 
\end_layout

\begin_layout Plain Layout


\backslash
end{figure}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:sklearn_runtime"

\end_inset

 shows the accuracy and training time with an increasing data set.
 The improvement of accuracy is low compared to the addiational runtime
 that is needed.
 Additional samples do not seem to improve the accuracy much.
 Therefore, it is more reasonable to add additional features to the data
 set, that improve the accuracy instead of increasing the number of instances.
 The training time of a SVM classifier is much more dependent on the number
 of instances than it is on the number of features, so that the training
 time can be reduced by using a small sample of the data with added features.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{figure}[h]
\end_layout

\begin_layout Plain Layout


\backslash
centering 
\end_layout

\begin_layout Plain Layout


\backslash
includegraphics[width=0.8
\backslash
linewidth]{graphics/sklearn_runtime} 
\end_layout

\begin_layout Plain Layout


\backslash
caption{SVC training time with increasing sample} 
\end_layout

\begin_layout Plain Layout


\backslash
label{fig:sklearn_runtime} 
\end_layout

\begin_layout Plain Layout


\backslash
end{figure}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
